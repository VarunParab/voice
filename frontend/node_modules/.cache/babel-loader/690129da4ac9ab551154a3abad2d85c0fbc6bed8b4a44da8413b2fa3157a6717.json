{"ast":null,"code":"var _jsxFileName = \"/Users/varun/Developer/voice/frontend/src/AudioRecorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport MicIcon from '@mui/icons-material/Mic';\nimport StopIcon from '@mui/icons-material/Stop';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioRecorder = ({\n  onTranscriptionComplete,\n  onMicrophoneToggle,\n  isActive\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = async () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: 'audio/m4a'\n        });\n        await sendAudioToServer(audioBlob);\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n      onMicrophoneToggle === null || onMicrophoneToggle === void 0 ? void 0 : onMicrophoneToggle(true);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      alert('Error accessing microphone. Please ensure you have granted microphone permissions.');\n      onMicrophoneToggle === null || onMicrophoneToggle === void 0 ? void 0 : onMicrophoneToggle(false);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      setIsProcessing(true);\n      onMicrophoneToggle === null || onMicrophoneToggle === void 0 ? void 0 : onMicrophoneToggle(false);\n\n      // Stop all audio tracks\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n  };\n  const sendAudioToServer = async audioBlob => {\n    try {\n      const formData = new FormData();\n      formData.append('file', audioBlob, 'audio.m4a');\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/transcribe`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Transcription failed');\n      }\n      const data = await response.json();\n      onTranscriptionComplete(data.transcription);\n    } catch (error) {\n      console.error('Error sending audio to server:', error);\n      alert('Error processing audio. Please try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Prevent recording if already active from external state\n  const handleClick = () => {\n    if (isActive && !isRecording) {\n      return; // Don't allow starting if already active from external source\n    }\n    if (isRecording) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-recorder\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      disabled: isProcessing || isActive && !isRecording,\n      className: `record-button ${isRecording ? 'recording' : ''} ${isProcessing ? 'processing' : ''}`,\n      \"aria-label\": isRecording ? 'Stop recording' : 'Start recording',\n      children: isProcessing ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24,\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : isRecording ? /*#__PURE__*/_jsxDEV(StopIcon, {\n        fontSize: \"medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(MicIcon, {\n        fontSize: \"medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .audio-recorder {\n          display: flex;\n          align-items: center;\n          height: 48px;\n        }\n        .record-button {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          border-radius: 50%;\n          border: none;\n          cursor: pointer;\n          background-color: #4CAF50;\n          color: white;\n          box-shadow: 0 2px 8px rgba(44,62,80,0.08);\n          transition: background 0.2s, box-shadow 0.2s;\n          outline: none;\n        }\n        .record-button:hover:not(:disabled) {\n          background-color: #45a049;\n        }\n        .record-button.recording {\n          background-color: #f44336;\n          animation: pulse 1.5s infinite;\n        }\n        .record-button.processing {\n          background-color: #9e9e9e;\n          cursor: not-allowed;\n        }\n        @keyframes pulse {\n          0% {\n            transform: scale(1);\n          }\n          50% {\n            transform: scale(1.05);\n          }\n          100% {\n            transform: scale(1);\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecorder, \"M3M2S3eczigosC+aRUWP75shTKw=\");\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useState","useRef","MicIcon","StopIcon","CircularProgress","jsxDEV","_jsxDEV","AudioRecorder","onTranscriptionComplete","onMicrophoneToggle","isActive","_s","isRecording","setIsRecording","isProcessing","setIsProcessing","mediaRecorderRef","audioChunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","push","data","onstop","audioBlob","Blob","type","sendAudioToServer","start","error","console","alert","stopRecording","stop","getTracks","forEach","track","formData","FormData","append","response","fetch","process","env","REACT_APP_API_URL","method","body","ok","Error","json","transcription","handleClick","className","children","onClick","disabled","size","color","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","_c","$RefreshReg$"],"sources":["/Users/varun/Developer/voice/frontend/src/AudioRecorder.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport MicIcon from '@mui/icons-material/Mic';\nimport StopIcon from '@mui/icons-material/Stop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst AudioRecorder = ({ onTranscriptionComplete, onMicrophoneToggle, isActive }) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n\n      mediaRecorderRef.current.ondataavailable = (event) => {\n        audioChunksRef.current.push(event.data);\n      };\n\n      mediaRecorderRef.current.onstop = async () => {\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/m4a' });\n        await sendAudioToServer(audioBlob);\n      };\n\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n      onMicrophoneToggle?.(true);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      alert('Error accessing microphone. Please ensure you have granted microphone permissions.');\n      onMicrophoneToggle?.(false);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      setIsProcessing(true);\n      onMicrophoneToggle?.(false);\n      \n      // Stop all audio tracks\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n  };\n\n  const sendAudioToServer = async (audioBlob) => {\n    try {\n      const formData = new FormData();\n      formData.append('file', audioBlob, 'audio.m4a');\n\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/transcribe`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('Transcription failed');\n      }\n\n      const data = await response.json();\n      onTranscriptionComplete(data.transcription);\n    } catch (error) {\n      console.error('Error sending audio to server:', error);\n      alert('Error processing audio. Please try again.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  // Prevent recording if already active from external state\n  const handleClick = () => {\n    if (isActive && !isRecording) {\n      return; // Don't allow starting if already active from external source\n    }\n    if (isRecording) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  };\n\n  return (\n    <div className=\"audio-recorder\">\n      <button\n        onClick={handleClick}\n        disabled={isProcessing || (isActive && !isRecording)}\n        className={`record-button ${isRecording ? 'recording' : ''} ${isProcessing ? 'processing' : ''}`}\n        aria-label={isRecording ? 'Stop recording' : 'Start recording'}\n      >\n        {isProcessing ? (\n          <CircularProgress size={24} color=\"inherit\" />\n        ) : isRecording ? (\n          <StopIcon fontSize=\"medium\" />\n        ) : (\n          <MicIcon fontSize=\"medium\" />\n        )}\n      </button>\n      <style>{`\n        .audio-recorder {\n          display: flex;\n          align-items: center;\n          height: 48px;\n        }\n        .record-button {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 48px;\n          height: 48px;\n          border-radius: 50%;\n          border: none;\n          cursor: pointer;\n          background-color: #4CAF50;\n          color: white;\n          box-shadow: 0 2px 8px rgba(44,62,80,0.08);\n          transition: background 0.2s, box-shadow 0.2s;\n          outline: none;\n        }\n        .record-button:hover:not(:disabled) {\n          background-color: #45a049;\n        }\n        .record-button.recording {\n          background-color: #f44336;\n          animation: pulse 1.5s infinite;\n        }\n        .record-button.processing {\n          background-color: #9e9e9e;\n          cursor: not-allowed;\n        }\n        @keyframes pulse {\n          0% {\n            transform: scale(1);\n          }\n          50% {\n            transform: scale(1.05);\n          }\n          100% {\n            transform: scale(1);\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default AudioRecorder; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}